# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kluctl < Formula
  desc "kluctl"
  homepage "https://kluctl.io/"
  version "2.17.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kluctl/kluctl/releases/download/v2.17.0/kluctl_v2.17.0_darwin_arm64.tar.gz"
      sha256 "cf1f6e5d064021f6cba44dc610931576e61cbb8d28aed46cdb9f87db127da78e"

      def install
        bin.install "kluctl"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kluctl/kluctl/releases/download/v2.17.0/kluctl_v2.17.0_darwin_amd64.tar.gz"
      sha256 "d0d8932736768834cb67d09ccbd089d76123bed7009433497896cd410625e603"

      def install
        bin.install "kluctl"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kluctl/kluctl/releases/download/v2.17.0/kluctl_v2.17.0_linux_amd64.tar.gz"
      sha256 "39d365dbb00d61f27cbbbcecd98cf38d0f0da5b019e728b69043fa7829e431aa"

      def install
        bin.install "kluctl"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kluctl/kluctl/releases/download/v2.17.0/kluctl_v2.17.0_linux_arm64.tar.gz"
      sha256 "76d8aeb48af073c353e249137e4d0a63af206f91192f8d6842c0b22800c6bcfe"

      def install
        bin.install "kluctl"
      end
    end
  end

  test do
    system "#{bin}/kluctl version"

    bash_output = Utils.safe_popen_read(bin/"kluctl", "completion", "bash")
    (bash_completion/"kluctl").write bash_output

    zsh_output = Utils.safe_popen_read(bin/"kluctl", "completion", "zsh")
    (zsh_completion/"_kluctl").write zsh_output

    fish_output = Utils.safe_popen_read(bin/"kluctl", "completion", "fish")
    (fish_completion/"kluctl.fish").write fish_output
  end
end
