# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kluctl < Formula
  desc "kluctl"
  homepage "https://kluctl.io/"
  version "2.9.1"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kluctl/kluctl/releases/download/v2.9.1/kluctl_v2.9.1_darwin_amd64.tar.gz"
      sha256 "9fb49b6602a6e9e9bbea9daf097a957402647d6b16f32bac9301a2978ad06f4e"

      def install
        bin.install "kluctl"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kluctl/kluctl/releases/download/v2.9.1/kluctl_v2.9.1_darwin_arm64.tar.gz"
      sha256 "61f3b1c0802e624cf47ff815608bb6a0ce730eec90bc4664667a2ab92448fa27"

      def install
        bin.install "kluctl"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kluctl/kluctl/releases/download/v2.9.1/kluctl_v2.9.1_linux_amd64.tar.gz"
      sha256 "577133cd9617ac94142870009a2477be29b11b489a68893c65bf1d545611d386"

      def install
        bin.install "kluctl"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kluctl/kluctl/releases/download/v2.9.1/kluctl_v2.9.1_linux_arm64.tar.gz"
      sha256 "e625354f393089ac6e2089d4a4bac2cc9f94ddfa2821e1a485007701f1e141e5"

      def install
        bin.install "kluctl"
      end
    end
  end

  test do
    system "#{bin}/kluctl version"

    bash_output = Utils.safe_popen_read(bin/"kluctl", "completion", "bash")
    (bash_completion/"kluctl").write bash_output

    zsh_output = Utils.safe_popen_read(bin/"kluctl", "completion", "zsh")
    (zsh_completion/"_kluctl").write zsh_output

    fish_output = Utils.safe_popen_read(bin/"kluctl", "completion", "fish")
    (fish_completion/"kluctl.fish").write fish_output
  end
end
