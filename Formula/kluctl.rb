# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kluctl < Formula
  desc "kluctl"
  homepage "https://kluctl.io/"
  version "2.10.1"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kluctl/kluctl/releases/download/v2.10.1/kluctl_v2.10.1_darwin_arm64.tar.gz"
      sha256 "9cbcb600c75ef46cb29c25769feaffc8d25bfa836b3c193981036001b22d967f"

      def install
        bin.install "kluctl"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kluctl/kluctl/releases/download/v2.10.1/kluctl_v2.10.1_darwin_amd64.tar.gz"
      sha256 "abc593632568fc58535c06882898472218567e4b553fc61323195e91c777930d"

      def install
        bin.install "kluctl"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kluctl/kluctl/releases/download/v2.10.1/kluctl_v2.10.1_linux_arm64.tar.gz"
      sha256 "4c4c4ee561bb30347b26925c23e0a64dfaadc8629365197244a5b05e323cb81b"

      def install
        bin.install "kluctl"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kluctl/kluctl/releases/download/v2.10.1/kluctl_v2.10.1_linux_amd64.tar.gz"
      sha256 "53ed4c525f495c990339f91c90b22fa4d9aa75f5146f3a3a9adb4f869c701f59"

      def install
        bin.install "kluctl"
      end
    end
  end

  test do
    system "#{bin}/kluctl version"

    bash_output = Utils.safe_popen_read(bin/"kluctl", "completion", "bash")
    (bash_completion/"kluctl").write bash_output

    zsh_output = Utils.safe_popen_read(bin/"kluctl", "completion", "zsh")
    (zsh_completion/"_kluctl").write zsh_output

    fish_output = Utils.safe_popen_read(bin/"kluctl", "completion", "fish")
    (fish_completion/"kluctl.fish").write fish_output
  end
end
